# Configure all these variables for your project/application

# TODO: Replace these values with:
#  - YOUR project id.
#  - YOUR desired cluster name to be created via 'make cluster'.
#  - YOUR verified custom domain.
#  - true for EVENTING_ENABLED if you'd like to enable the eventing component.
PROJECT_ID=project-id
CLUSTER_NAME=my-gke-cluster
DOMAIN=my-zone.cloud-tutorial.dev
EVENTING_ENABLED=false

# Parameters for code generation
# These must always match the module declaration in backend/src/go.mod
# i.e. `module github.com/${GIT_USER_ID}/${GIT_REPO_ID}
GIT_USER_ID=mdivanova
GIT_REPO_ID=reference-web-app

# Cluster information
CLUSTER_LOCATION=$(shell gcloud --project $(PROJECT_ID) container clusters list --filter="name:$(CLUSTER_NAME)" --format="csv[no-heading](location)" )
CLUSTER_GKE_VERSION=$(shell gcloud --project $(PROJECT_ID) container clusters list --filter="name:$(CLUSTER_NAME)" --format="csv[no-heading](currentMasterVersion)")

# Default location and GKE version for cluster creation
ifeq ($(CLUSTER_LOCATION),)
	CLUSTER_LOCATION=us-west1-a
endif
ifeq ($(CLUSTER_GKE_VERSION),)
	CLUSTER_GKE_VERSION=1.15
endif

# Cloud DNS managed zone name
MANAGED_ZONE_NAME=$(shell gcloud --project=$(PROJECT_ID) dns managed-zones list --format="csv[no-heading](name)" --filter="dnsName:$(DOMAIN)")

# Namespace to be used by app and KCC resources
NAMESPACE=app

# Cluster local hostname of the event broker for evening
EVENT_BROKER_HOSTNAME=http://default-broker.$(NAMESPACE).svc.cluster.local

# Istio Ingress information
ISTIO_INGRESS_SERVICE=istio-ingress
ISTIO_INGRESS_NAMESPACE=gke-system

# Backend service name
BACKEND_IMAGE_NAME=backserv
BACKEND_SERVICE_NAME=$(BACKEND_IMAGE_NAME)
BACKEND_SERVICE_HOST_NAME=$(BACKEND_SERVICE_NAME).$(NAMESPACE).example.com

# SSL certificate name (will be created if it doesn't already exist)
# If you already have an SSL certificate associated with your domain,
# you can find its name at https://console.cloud.google.com/net-services/loadbalancing/advanced/sslCertificates/list
SSL_CERT_NAME=web-app-ssl-certificate

# Workload Identity service account names
BACKEND_KSA=$(NAMESPACE)-$(BACKEND_SERVICE_NAME)
BACKEND_GSA=ksa-$(BACKEND_KSA)
